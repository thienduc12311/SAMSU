-- MySQL Script generated by MySQL Workbench
-- Thứ bảy, 14 Tháng 10 Năm 2023 11:57:25 +07
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema samsu
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema samsu
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `samsu` DEFAULT CHARACTER SET utf8 ;
USE `samsu` ;

-- -----------------------------------------------------
-- Table `samsu`.`Semesters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`Semesters` ;

CREATE TABLE IF NOT EXISTS `samsu`.`Semesters` (
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`achivement_templates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`achivement_templates` ;

CREATE TABLE IF NOT EXISTS `samsu`.`achivement_templates` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(1000) NULL,
  `file_urls` NVARCHAR(2000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`achivements`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`achivements` ;

CREATE TABLE IF NOT EXISTS `samsu`.`achivements` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(1000) NULL,
  `content` NVARCHAR(2000) NULL,
  `achivement_templates_id` INT NULL,
  `semesters_name` VARCHAR(45) NOT NULL,
  `onwer_users_id` INT NOT NULL,
  `creator_users_id` INT NOT NULL,
  `url` VARCHAR(1000) NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Achivements_AchivementTemplates1_idx` (`achivement_templates_id` ASC) VISIBLE,
  INDEX `fk_Achivements_Semesters1_idx` (`semesters_name` ASC) VISIBLE,
  INDEX `fk_Achivements_Users1_idx` (`onwer_users_id` ASC) VISIBLE,
  INDEX `fk_Achivements_Users2_idx` (`creator_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Achivements_AchivementTemplates1`
    FOREIGN KEY (`achivement_templates_id`)
    REFERENCES `samsu`.`achivement_templates` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Achivements_Semesters1`
    FOREIGN KEY (`semesters_name`)
    REFERENCES `samsu`.`Semesters` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Achivements_Users1`
    FOREIGN KEY (`onwer_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Achivements_Users2`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`announcements`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`announcements` ;

CREATE TABLE IF NOT EXISTS `samsu`.`announcements` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` TINYINT NOT NULL,
  `title` NVARCHAR(255) NOT NULL,
  `content` NVARCHAR(5000) NULL,
  `creator_users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Announcement_User1_idx` (`creator_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Announcement_User1`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`asignee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`asignee` ;

CREATE TABLE IF NOT EXISTS `samsu`.`asignee` (
  `users_id` INT NOT NULL,
  `tasks_id` INT NOT NULL,
  `status` TINYINT NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`tasks_id`, `users_id`),
  INDEX `fk_Users_has_Tasks_Tasks1_idx` (`tasks_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Tasks_Users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Tasks_Users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Tasks_Tasks1`
    FOREIGN KEY (`tasks_id`)
    REFERENCES `samsu`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`department_collaberators`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`department_collaberators` ;

CREATE TABLE IF NOT EXISTS `samsu`.`department_collaberators` (
  `events_id` INT NOT NULL,
  `departments_id` INT NOT NULL,
  PRIMARY KEY (`events_id`, `departments_id`),
  INDEX `fk_Events_has_Departments_Departments1_idx` (`departments_id` ASC) VISIBLE,
  INDEX `fk_Events_has_Departments_Events1_idx` (`events_id` ASC) VISIBLE,
  CONSTRAINT `fk_Events_has_Departments_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Events_has_Departments_Departments1`
    FOREIGN KEY (`departments_id`)
    REFERENCES `samsu`.`departments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`departments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`departments` ;

CREATE TABLE IF NOT EXISTS `samsu`.`departments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`event_proposals`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`event_proposals` ;

CREATE TABLE IF NOT EXISTS `samsu`.`event_proposals` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(255) NULL,
  `content` NVARCHAR(5000) NULL,
  `feedback` NVARCHAR(2000) NULL,
  `status` TINYINT NULL,
  `creator_users_id` INT NOT NULL,
  `accepter_users_id` INT NULL,
  `fileUrls` VARCHAR(5000) NULL,
  `created_at` DATETIME NULL,
  `modify_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_EventProposal_Users1_idx` (`creator_users_id` ASC) VISIBLE,
  INDEX `fk_EventProposal_Users2_idx` (`accepter_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_EventProposal_Users1`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EventProposal_Users2`
    FOREIGN KEY (`accepter_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`events` ;

CREATE TABLE IF NOT EXISTS `samsu`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL,
  `status` TINYINT NOT NULL,
  `duration` INT NOT NULL,
  `title` NVARCHAR(1000) NOT NULL,
  `content` NVARCHAR(5000) NOT NULL,
  `creator_user_id` INT NOT NULL,
  `event_proposal_id` INT NOT NULL,
  `event_leader_users_id` INT NOT NULL,
  `semesters_name` VARCHAR(45) NOT NULL,
  `banner_url` VARCHAR(1000) NULL,
  `file_urls` VARCHAR(2000) NULL,
  `start_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Events_Users1_idx` (`creator_user_id` ASC) VISIBLE,
  INDEX `fk_Events_EventProposal1_idx` (`event_proposal_id` ASC) VISIBLE,
  INDEX `fk_Events_Users2_idx` (`event_leader_users_id` ASC) VISIBLE,
  INDEX `fk_Events_Semesters1_idx` (`semesters_name` ASC) VISIBLE,
  CONSTRAINT `fk_Events_Users1`
    FOREIGN KEY (`creator_user_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Events_EventProposal1`
    FOREIGN KEY (`event_proposal_id`)
    REFERENCES `samsu`.`event_proposals` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Events_Users2`
    FOREIGN KEY (`event_leader_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Events_Semesters1`
    FOREIGN KEY (`semesters_name`)
    REFERENCES `samsu`.`Semesters` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`feedback_answers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`feedback_answers` ;

CREATE TABLE IF NOT EXISTS `samsu`.`feedback_answers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `kudos` INT NULL,
  `content` NVARCHAR(5000) NULL,
  `feedback_questions_id` INT NOT NULL,
  `owner_users_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FeedbackAnswer_FeedbackQuestion1_idx` (`feedback_questions_id` ASC) VISIBLE,
  INDEX `fk_FeedbackAnswer_Users1_idx` (`owner_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_FeedbackAnswer_FeedbackQuestion1`
    FOREIGN KEY (`feedback_questions_id`)
    REFERENCES `samsu`.`feedback_questions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FeedbackAnswer_Users1`
    FOREIGN KEY (`owner_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`feedback_questions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`feedback_questions` ;

CREATE TABLE IF NOT EXISTS `samsu`.`feedback_questions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `kudos` INT NULL,
  `content` NVARCHAR(5000) NULL,
  `events_id` INT NOT NULL,
  `owner_users_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_FeedbackQuestion_Events1_idx` (`events_id` ASC) VISIBLE,
  INDEX `fk_FeedbackQuestions_Users1_idx` (`owner_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_FeedbackQuestion_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FeedbackQuestions_Users1`
    FOREIGN KEY (`owner_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`grade_criterias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`grade_criterias` ;

CREATE TABLE IF NOT EXISTS `samsu`.`grade_criterias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` NVARCHAR(1000) NOT NULL,
  `policy_document_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_GradeCriteria_PolicyDocument1_idx` (`policy_document_id` ASC) VISIBLE,
  CONSTRAINT `fk_GradeCriteria_PolicyDocument1`
    FOREIGN KEY (`policy_document_id`)
    REFERENCES `samsu`.`policy_documents` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`grade_sub_criterias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`grade_sub_criterias` ;

CREATE TABLE IF NOT EXISTS `samsu`.`grade_sub_criterias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `min_score` INT NOT NULL,
  `max_score` INT NOT NULL,
  `content` NVARCHAR(1000) NOT NULL,
  `grade_criterias_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_GradeSubCriteria_GradeCriteria1_idx` (`grade_criterias_id` ASC) VISIBLE,
  CONSTRAINT `fk_GradeSubCriteria_GradeCriteria1`
    FOREIGN KEY (`grade_criterias_id`)
    REFERENCES `samsu`.`grade_criterias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`grade_ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`grade_ticket` ;

CREATE TABLE IF NOT EXISTS `samsu`.`grade_ticket` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(1000) NOT NULL,
  `content` NVARCHAR(5000) NULL,
  `evidenceUrls` NVARCHAR(2000) NULL,
  `status` TINYINT NOT NULL,
  `grade_sub_criterias_id` INT NOT NULL,
  `creator_users_id` INT NOT NULL,
  `accepter_users_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_GradeTicket_GradeSubCriteria1_idx` (`grade_sub_criterias_id` ASC) VISIBLE,
  INDEX `fk_GradeTicket_Users1_idx` (`creator_users_id` ASC) VISIBLE,
  INDEX `fk_GradeTicket_Users2_idx` (`accepter_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_GradeTicket_GradeSubCriteria1`
    FOREIGN KEY (`grade_sub_criterias_id`)
    REFERENCES `samsu`.`grade_sub_criterias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GradeTicket_Users1`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GradeTicket_Users2`
    FOREIGN KEY (`accepter_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`group_members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`group_members` ;

CREATE TABLE IF NOT EXISTS `samsu`.`group_members` (
  `groups_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`groups_id`, `users_id`),
  INDEX `fk_GroupUsers_has_Users_Users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_GroupUsers_has_Users_GroupUsers1_idx` (`groups_id` ASC) VISIBLE,
  CONSTRAINT `fk_GroupUsers_has_Users_GroupUsers1`
    FOREIGN KEY (`groups_id`)
    REFERENCES `samsu`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GroupUsers_has_Users_Users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`groups` ;

CREATE TABLE IF NOT EXISTS `samsu`.`groups` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`policy_documents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`policy_documents` ;

CREATE TABLE IF NOT EXISTS `samsu`.`policy_documents` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(2000) NOT NULL,
  `file_urls` NVARCHAR(2000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`posts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`posts` ;

CREATE TABLE IF NOT EXISTS `samsu`.`posts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(1000) NOT NULL,
  `body` NVARCHAR(5000) NOT NULL,
  `kudos` INT ZEROFILL NOT NULL,
  `events_id` INT NOT NULL,
  `creator_users_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `image_urls` VARCHAR(1000) NULL,
  `file_urls` VARCHAR(2000) NULL,
  `status` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Posts_Events1_idx` (`events_id` ASC) VISIBLE,
  INDEX `fk_Posts_Users1_idx` (`creator_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Posts_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Posts_Users1`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`tasks` ;

CREATE TABLE IF NOT EXISTS `samsu`.`tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` NVARCHAR(1000) NOT NULL,
  `content` NVARCHAR(5000) NOT NULL,
  `status` TINYINT NOT NULL,
  `events_id` INT NOT NULL,
  `creator_users_id` INT NULL,
  `score` TINYINT NULL,
  `gradeSubCriteria_id` INT NOT NULL,
  `created_at` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Tasks_Events1_idx` (`events_id` ASC) VISIBLE,
  INDEX `fk_Tasks_Users1_idx` (`creator_users_id` ASC) VISIBLE,
  INDEX `fk_Tasks_GradeSubCriteria1_idx` (`gradeSubCriteria_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tasks_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tasks_Users1`
    FOREIGN KEY (`creator_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tasks_GradeSubCriteria1`
    FOREIGN KEY (`gradeSubCriteria_id`)
    REFERENCES `samsu`.`grade_sub_criterias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`team_members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`team_members` ;

CREATE TABLE IF NOT EXISTS `samsu`.`team_members` (
  `users_id` INT NOT NULL,
  `teams_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `teams_id`),
  INDEX `fk_Users_has_Teams_Teams1_idx` (`teams_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Teams_Users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Teams_Users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Teams_Teams1`
    FOREIGN KEY (`teams_id`)
    REFERENCES `samsu`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`teams` ;

CREATE TABLE IF NOT EXISTS `samsu`.`teams` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(255) NULL,
  `events_id` INT NOT NULL,
  `teams_leader_users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Teams_Events1_idx` (`events_id` ASC) VISIBLE,
  INDEX `fk_Teams_Users1_idx` (`teams_leader_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Teams_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Teams_Users1`
    FOREIGN KEY (`teams_leader_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`user_event_following`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`user_event_following` ;

CREATE TABLE IF NOT EXISTS `samsu`.`user_event_following` (
  `users_id` INT NOT NULL,
  `events_id` INT NOT NULL,
  PRIMARY KEY (`events_id`, `users_id`),
  INDEX `fk_UserEventTracking_Users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_UserEventTracking_Events1_idx` (`events_id` ASC) VISIBLE,
  CONSTRAINT `fk_UserEventTracking_Users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserEventTracking_Events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `samsu`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`user_notifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`user_notifications` ;

CREATE TABLE IF NOT EXISTS `samsu`.`user_notifications` (
  `announcement_id` INT NOT NULL,
  `receiver_users_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`announcement_id`, `receiver_users_id`),
  INDEX `fk_Announcement_has_User_User1_idx` (`receiver_users_id` ASC) VISIBLE,
  INDEX `fk_Announcement_has_User_Announcement1_idx` (`announcement_id` ASC) VISIBLE,
  CONSTRAINT `fk_Announcement_has_User_Announcement1`
    FOREIGN KEY (`announcement_id`)
    REFERENCES `samsu`.`announcements` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Announcement_has_User_User1`
    FOREIGN KEY (`receiver_users_id`)
    REFERENCES `samsu`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `samsu`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `samsu`.`users` ;

CREATE TABLE IF NOT EXISTS `samsu`.`users` (
  `id` INT NOT NULL,
  `username` NVARCHAR(45) NULL,
  `password` NVARCHAR(255) NULL COMMENT 'Use hash string for privacy of user',
  `email` NVARCHAR(45) NOT NULL,
  `avatar` NVARCHAR(1000) NULL,
  `role` TINYINT NOT NULL COMMENT 'Role: \n1: admin\n2: manager\n3: staff\n4: student\n',
  `created_at` DATETIME NOT NULL,
  `status` TINYINT NOT NULL,
  `name` NVARCHAR(1000) NULL,
  `dob` DATETIME NULL,
  `departments_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `user_name_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_users_departments1_idx` (`departments_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_departments1`
    FOREIGN KEY (`departments_id`)
    REFERENCES `samsu`.`departments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO `samsu`.`users` (`id`, `username`, `password`, `email`, `role`, `created_at`, `status`) VALUES ('0', 'admin', '123456', 'tnah', '1', '2023-10-16 00:00:00', '0');
